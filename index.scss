// Provides a common icon set for html page using "image based icon"
// and fallback using "font based icon" (Google's Material Icons -or- Font Awesome).



// development:
// @use "node_modules/@heymarco/sass-class-template/index" as *;
// @use "node_modules/@heymarco/sass-selector/index"       as selector;
// @use "node_modules/@heymarco/sass-string/index"         as string;

// production:
@use "../../../node_modules/@heymarco/sass-class-template/index" as *;
@use "../../../node_modules/@heymarco/sass-selector/index"       as selector;
@use "../../../node_modules/@heymarco/sass-string/index"         as string;



@forward "base"       hide $alias, style, style-basic, style-any, style-of;
@use     "base"       as base;

@forward "image"      as img-*;
@use     "image"      as img;

@forward "font"       as font-*;
@use     "font"       as font;


@forward "common";
@use     "common"     as *;
@use     "sass:list"  as list;
@use     "sass:map"   as map;



$alias          : "%icon"                                   !default;

$default        : "img"                                     !default;
@if (list.index(("img", "font", "", null), $default) == null) { @error "$default must be \"img\" or \"font\" or \"\" or null"; }

// limits the extend.
// in some browsers, too many extends => css is not recognized well
// so we limit the extend number - creates a new style group
$extend-limit   : 300                                       !default;



/* begin: item-specific (-specific) style */
$items-n: ();
@if (string.not-empty($default)) {
    @if ($default == "img") {
        // image first, then font:
        $items-n: map.merge(img.$items-n, $items-n);
        $items-n: map.merge(font.$items-n, $items-n);
    }
    @else if ($default == "font") {
        // font first, them image:
        $items-n: map.merge(font.$items-n, $items-n);
        $items-n: map.merge(img.$items-n, $items-n);
    }
}

$_extend-current-img: #{img.$alias}--;
$_extend-counter-img: 0;
$_extend-counter-group-img: 1;
@mixin _style-of-img($item-n, $include) {
    @if ($include) {
        @include img.style-of($item-n);

        // explicitly include to:
        @include img.style-basic;
    }
    @else {
        @extend #{img.$alias}-#{$item-n} !optional;

        // explicitly include to:
        @if ($extend-limit >= 1) {
            $_extend-counter-img: $_extend-counter-img + 1;
            @if ($_extend-counter-img > $extend-limit) {
                $_extend-counter-img: 0;
                $_extend-counter-group-img: $_extend-counter-group-img + 1;

                $_extend-current-img: #{img.$alias}--#{$_extend-counter-group-img};
                @at-root { @include selector.is($_extend-current-img) {
                    @include img.style-basic;
                }}
            }
        }
        @extend #{$_extend-current-img}  !optional;
    }
}
$_extend-current-font: #{font.$alias}--;
$_extend-counter-font: 0;
$_extend-counter-group-font: 1;
@mixin _style-of-font($item-n, $include) {
    @if ($include) {
        @include font.style-of($item-n);

        // explicitly include to:
        @include font.style-basic;
    }
    @else {
        @extend #{font.$alias}-#{$item-n} !optional;

        // explicitly include to:
        @if ($extend-limit >= 1) {
            $_extend-counter-font: $_extend-counter-font + 1;
            @if ($_extend-counter-font > $extend-limit) {
                $_extend-counter-font: 0;
                $_extend-counter-group-font: $_extend-counter-group-font + 1;

                $_extend-current-font: #{font.$alias}--#{$_extend-counter-group-font};
                @at-root { @include selector.is($_extend-current-font) {
                    @include font.style-basic;
                }}
            }
        }
        @extend #{$_extend-current-font}  !optional;
    }
}
@mixin _style-of($item, $include) {
    //items => implicitly included from style basic:
    // @if ($include) { @include style-basic; }
    // @else          { @extend #{$alias}--; }


    $item-n: normalize-class($item);

    $img-has-item   : map.has-key(img.$items-n, $item-n);
    $font-has-item  : map.has-key(font.$items-n, $item-n);

    @if ($default == "img") {
        @if ($img-has-item) {
            // primary: include img:
            @if ($font-has-item) { @include selector.append-not(font.$class) {
                @include _style-of-img($item-n, $include);
            }}
            @else {
                @include _style-of-img($item-n, $include);
            }

            // secondary: include font:
            @if ($font-has-item) { @include selector.append(font.$class) {
                @include _style-of-font($item-n, $include);
            }}
        }
        @else if ($font-has-item) {
            // primary doesn't exist
            // set secondary as primary: include font:
            @include _style-of-font($item-n, $include);
        }
        @else {
            @error "#{$item} is not found.";
        }
    }
    @else if ($default == "font") {
        @if ($font-has-item) {
            // primary: include font:
            @if ($img-has-item) { @include selector.append-not(img.$class) {
                @include _style-of-font($item-n, $include);
            }}
            @else {
                @include _style-of-font($item-n, $include);
            }

            // secondary: include img:
            @if ($img-has-item) { @include selector.append(img.$class) {
                @include _style-of-img($item-n, $include);
            }}
        }
        @else if ($img-has-item) {
            // primary doesn't exist
            // set secondary as primary: include img:
            @include _style-of-img($item-n, $include);
        }
        @else {
            @error "#{$item} is not found.";
        }
    }
}
@mixin style-of($item) {
    @include _style-of($item, true);
}
@each $item-n, $content in $items-n {
    @include alias-of($alias, $item-n) {
        @include _style-of($item-n, false);
    }
}
/* end: item-specific (-specific) style */

/* begin: item-any (-) style */
@mixin _style-any($include) {
    @if (string.not-empty($default)) {
        @each $item-n, $content in $items-n {
            @include selector.append("." + $item-n) {
                // import item-specific style:
                @if ($include) { @include   style-of($item-n); }
                @else          { @extend #{$alias}-#{$item-n} !optional; }
            }
        }
    }
    @else {
        @include selector.append(img.$class) {
            // import item-specific style:
            @if ($include) { @include  img.style-any; }
            @else          { @extend #{img.$alias}- !optional; }
        }
    
        @include selector.append(font.$class) {
            // import item-specific style:
            @if ($include) { @include  font.style-any; }
            @else          { @extend #{font.$alias}- !optional; }
        }
    }
}
@mixin style-any {
    @include _style-any(true);
}
@include alias-any($alias) {
    @include _style-any(false);
}
/* end: item-any (-) style */



/* begin: basic (--) style */
@mixin _style-basic($include) {
    @if ($include) { @include  base.style; }
    @else          { @extend #{base.$alias} !optional; }


    @if (string.is-empty($default)) {
        @include selector.append(img.$class) {
            @if ($include) {
                @include img.style-basic;
            }
            @else {
                @extend #{img.$alias}-- !optional;
            }
        }

        @include selector.append(font.$class) {
            @if ($include) {
                @include font.style-basic;
            }
            @else {
                @extend #{font.$alias}-- !optional;
            }
        }
    }
}
@mixin style-basic {
    @include _style-basic(true);
}
@include alias-basic($alias) {
    @include _style-basic(false);
}
/* end: basic (--) style */



/* begin: general style */
@mixin style {
    @include style-basic;   // import basic (--) style
    @include style-any;     // import item-any (-) style
}
@include alias($alias) {
    @extend #{$alias}-- !optional; // import basic (--) style
    @extend #{$alias}-  !optional; // import item-any (-) style
}
/* end: general style */



@include class($alias, base.$class, "");